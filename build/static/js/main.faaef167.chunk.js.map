{"version":3,"sources":["User.js","store.js","Comment.js","CommentsList.js","Post.js","PostList.js","api.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","address","city","email","getPosts","state","posts","filter","post","title","body","includes","querySelector","store","createStore","action","type","Object","objectSpread2","inputValue","id","postId","map","comments","c","commentId","isLoading","loadingButton","mapDispatchToProps","deleteComment","connect","comment","onClick","CommentsList","singleComment","src_Comment","deletePost","src_User","src_CommentsList","postData","src_Post","response","regenerator_default","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getComments","_context2","getUsers","_context3","setPosts","startLoading","finishLoading","hideLoadingButton","setQuerySelector","countAllPosts","length","countVisiblePosts","selectors","_useState","useState","_useState2","slicedToArray","setInputValue","planFilterPosts","useCallback","f","delay","timerId","clearTimeout","_len","arguments","args","Array","_key","setTimeout","apply","concat","debounce","value","_ref2","_ref3","users","postsWithUsersAndComments","Promise","all","find","userId","onChange","e","target","src_PostList","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.faaef167.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div className=\"post__author author\">\n    <p>\n      Post by:\n      {' '}\n      {user.name}\n      {' '}\n      from\n      {' '}\n      {user.address.city}\n    </p>\n    <p>{user.email}</p>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    address: PropTypes.object,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import { createStore } from 'redux';\n\n// Action Types\nconst ACTION_TYPE_SET_POSTS = 'SET_POSTS';\nconst ACTION_TYPE_DELETE_POST = 'DELETE_POST';\nconst ACTION_TYPE_DELETE_COMMENT = 'DELETE_COMMENT';\nconst ACTION_TYPE_SET_QUERY_SELECTOR = 'SET_QUERY_SELECTOR';\n\nconst ACTION_TYPE_START_LOADING = 'START_LOADING';\nconst ACTION_TYPE_FINISH_LOADING = 'FINISH_LOADING';\nconst ACTION_TYPE_LOADING_BUTTON_IS_OFF = 'LOADING_BUTTON_IS_OFF';\n\n// Action Creators\nexport const setPosts = posts => ({\n  type: ACTION_TYPE_SET_POSTS,\n  posts,\n});\n\nexport const deletePost = postId => ({\n  type: ACTION_TYPE_DELETE_POST,\n  postId,\n});\n\nexport const deleteComment = (commentId, postId) => ({\n  type: ACTION_TYPE_DELETE_COMMENT,\n  commentId,\n  postId,\n});\n\nexport const setQuerySelector = inputValue => ({\n  type: ACTION_TYPE_SET_QUERY_SELECTOR,\n  inputValue,\n});\n\nexport const startLoading = () => ({\n  type: ACTION_TYPE_START_LOADING,\n});\n\nexport const finishLoading = () => ({\n  type: ACTION_TYPE_FINISH_LOADING,\n});\n\nexport const hideLoadingButton = () => ({\n  type: ACTION_TYPE_LOADING_BUTTON_IS_OFF,\n});\n\n// Selectors\nexport const getPosts = state => state.posts\n  .filter(post => (post.title + post.body).includes(state.querySelector));\n\n// Reducer\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPE_SET_POSTS:\n      return {\n        ...state,\n        posts: action.posts,\n      };\n    case ACTION_TYPE_SET_QUERY_SELECTOR:\n      return {\n        ...state,\n        querySelector: action.inputValue,\n      };\n    case ACTION_TYPE_DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts\n          .filter(post => post.id !== action.postId),\n      };\n    case ACTION_TYPE_DELETE_COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n          if (post.id === action.postId) {\n            post.comments = post.comments\n              .filter(c => c.id !== action.commentId);\n          }\n\n          return {\n            ...post,\n            comments: post.comments,\n          };\n        }),\n      };\n    case ACTION_TYPE_START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case ACTION_TYPE_FINISH_LOADING:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case ACTION_TYPE_LOADING_BUTTON_IS_OFF:\n      return {\n        ...state,\n        loadingButton: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  posts: [],\n  isLoading: false,\n  loadingButton: true,\n  querySelector: '',\n};\n\nconst store = createStore(rootReducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actionCreators from './store';\n\n// eslint-disable-next-line no-shadow\nconst Comment = ({ comment, deleteComment }) => (\n  <div className=\"comments__item\">\n    <li className=\"comments__name\">\n      {comment.name}\n      <span>\n        <button\n          type=\"button\"\n          className=\"post__button\"\n          onClick={() => deleteComment(comment.id, comment.postId)}\n        >\n          X\n        </button>\n      </span>\n    </li>\n    <p className=\"comments__email\">\n      By\n      {' '}\n      {comment.email}\n    </p>\n    <p className=\"comments__text\">{comment.body}</p>\n  </div>\n);\n\nconst mapDispatchToProps = {\n  deleteComment: actionCreators.deleteComment,\n};\n\nexport default connect(null, mapDispatchToProps)(Comment);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n    id: PropTypes.number,\n    postId: PropTypes.number,\n  }).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// eslint-disable-next-line no-shadow\nimport Comment from './Comment';\n\nconst CommentsList = ({ comments }) => (\n  <div className=\"post__comments comments\">\n    <p>Comments:</p>\n    <ul className=\"comments__list\">\n      {comments.map(singleComment => <Comment comment={singleComment} />)}\n    </ul>\n  </div>\n);\n\nexport default CommentsList;\n\n// eslint-disable-next-line max-len\nCommentsList.propTypes = { comments: PropTypes.arrayOf(PropTypes.object).isRequired };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport User from './User';\nimport CommentsList from './CommentsList';\nimport * as actionCreators from './store';\n\nconst Post = ({ post, deletePost }) => (\n  <div className=\"post\">\n    <button\n      type=\"button\"\n      className=\"post__button\"\n      onClick={() => deletePost(post.id)}\n    >\n      X\n    </button>\n    <p className=\"post__title\">{post.title}</p>\n    <p className=\"post__body\">{post.body}</p>\n    <User user={post.user} />\n    <CommentsList comments={post.comments} />\n  </div>\n);\n\nconst mapDispatchToProps = {\n  deletePost: actionCreators.deletePost,\n};\n\nexport default connect(null, mapDispatchToProps)(Post);\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.object,\n    user: PropTypes.object,\n    id: PropTypes.number,\n  }).isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Post from './Post';\nimport { getPosts } from './store';\n\nconst PostList = ({ posts }) => (\n  posts.map(postData => (\n    <Post post={postData} />\n  ))\n);\n\nconst mapStateToProps = state => ({\n  posts: getPosts(state),\n});\n\nexport default connect(mapStateToProps)(PostList);\n","const postsURL = 'https://jsonplaceholder.typicode.com/posts';\nconst commentsURL = 'https://jsonplaceholder.typicode.com/comments';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getPosts = async() => {\n  const response = await fetch(postsURL);\n\n  return response.json();\n};\n\nexport const getComments = async() => {\n  const response = await fetch(commentsURL);\n\n  return response.json();\n};\n\nexport const getUsers = async() => {\n  const response = await fetch(usersURL);\n\n  return response.json();\n};\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostList from './PostList';\nimport './App.css';\nimport { getUsers, getComments, getPosts } from './api';\n// eslint-disable-next-line import/no-duplicates\nimport * as actionCreators from './store';\n// eslint-disable-next-line import/no-duplicates\nimport * as selectors from './store';\n\nconst App = ({\n  startLoading,\n  finishLoading,\n  hideLoadingButton,\n  setPosts,\n  isLoading,\n  loadingButton,\n  countAllPosts,\n  setQuerySelector,\n  countVisiblePosts,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleLoading = async() => {\n    startLoading();\n\n    const [posts, comments, users] = await Promise.all([\n      getPosts(),\n      getComments(),\n      getUsers(),\n    ]);\n\n    finishLoading();\n    hideLoadingButton();\n\n    const postsWithUsersAndComments = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    setPosts(postsWithUsersAndComments);\n\n    return postsWithUsersAndComments;\n  };\n\n  const debounce = (f, delay) => {\n    let timerId = 0;\n\n    return (...args) => {\n      clearTimeout(timerId);\n      timerId = setTimeout(f, delay, ...args);\n    };\n  };\n\n  const handleInputValue = (e) => {\n    setInputValue(e.target.value);\n    planFilterPosts(e.target.value);\n  };\n\n  const filterPosts = (value) => {\n    setQuerySelector(value);\n  };\n\n  const planFilterPosts = useCallback(\n    debounce(filterPosts, 1000),\n    []\n  );\n\n  if (isLoading) {\n    return (\n      <h1 className=\"App\">Loading...</h1>\n    );\n  }\n\n  return loadingButton\n    ? (\n      <div className=\"box\">\n        <button\n          type=\"button\"\n          onClick={handleLoading}\n          className=\"filter__button button\"\n        >\n          Load posts\n        </button>\n      </div>\n    )\n    : (\n      <div className=\"App\">\n        <div className=\"filter\">\n          <h1>Redux List of Posts</h1>\n          <p>\n            all posts:\n            {countAllPosts}\n            {' '}\n            visible posts:\n            {countVisiblePosts}\n          </p>\n          <input\n            type=\"text\"\n            className=\"filter__input\"\n            value={inputValue}\n            onChange={handleInputValue}\n          />\n        </div>\n        <PostList />\n      </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  loadingButton: state.loadingButton,\n  countAllPosts: state.posts.length,\n  countVisiblePosts: selectors.getPosts(state).length,\n});\n\nconst mapDispatchToProps = {\n  setPosts: actionCreators.setPosts,\n  startLoading: actionCreators.startLoading,\n  finishLoading: actionCreators.finishLoading,\n  hideLoadingButton: actionCreators.hideLoadingButton,\n  setQuerySelector: actionCreators.setQuerySelector,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  startLoading: PropTypes.func.isRequired,\n  finishLoading: PropTypes.func.isRequired,\n  hideLoadingButton: PropTypes.func.isRequired,\n  setPosts: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  loadingButton: PropTypes.bool.isRequired,\n  countAllPosts: PropTypes.number.isRequired,\n  countVisiblePosts: PropTypes.number.isRequired,\n  setQuerySelector: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}