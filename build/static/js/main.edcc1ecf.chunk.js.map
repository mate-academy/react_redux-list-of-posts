{"version":3,"sources":["store/actionTypes.js","store/reducer.js","store/configureStore.js","store/actions.js","store/functions/fetchPostsAndUsers.js","store/functions/deletePost.js","components/User/User.jsx","store/functions/deleteComment.js","components/Comment/Comment.jsx","containers/CommentHandler.js","components/CommentsList/CommentsList.jsx","components/Post/Post.jsx","containers/PostHandler.js","components/PostList/PostList.jsx","store/selectors.js","containers/PostListHandler.js","App.js","serviceWorker.js","index.js"],"names":["ACTION_TYPES","START_LOADING","HANDLE_ERROR","HANDLE_SUCCESS","HANDLE_DELETE_POST","HANDLE_DELETE_COMMENT","initialState","users","posts","comments","hasError","isLoading","isLoaded","store","createStore","array","id","state","arguments","length","undefined","action","type","_objectSpread","payload","Object","toConsumableArray","filter","post","comment","composeWithDevTools","applyMiddleware","thunk","handleError","handleSuccess","_ref","loadPostsAndUsers","dispatch","usersApi","commentsApi","postsApi","Promise","all","fetch","then","_ref2","slicedToArray","res1","res2","res3","json","_ref3","_ref4","catch","deletePostFromList","itemId","deletePost","User","user","name","username","email","address","react_default","a","createElement","className","street","suite","city","zipcode","deleteCommentFromPost","ids","Comment","body","onClick","connect","ownProps","CommentsList","map","CommentHandler","key","Post","components_User_User","concat","title","components_CommentsList_CommentsList","PostsList","props","preparedPosts","_useState","useState","_useState2","search","setSearch","filteredPosts","indexOf","console","log","Fragment","placeholder","value","onChange","e","target","PostHandler","selectPosts","createSelector","selectors_objectSpread","find","userId","postId","PostList","App","PostListHandler","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.edcc1ecf.chunk.js","sourcesContent":["const ACTION_TYPES = {\n  START_LOADING: 'START_LOADING',\n  HANDLE_ERROR: 'HANDLE_ERROR',\n  HANDLE_SUCCESS: 'HANDLE_SUCCESS',\n  HANDLE_DELETE_POST: 'HANDLE_DELETE_POST',\n  HANDLE_DELETE_COMMENT: 'HANDLE_DELETE_COMMENT',\n};\n\nexport default ACTION_TYPES;\n","import ACTION_TYPES from './actionTypes';\n\nexport const initialState = {\n  users: [],\n  posts: [],\n  comments: [],\n  hasError: false,\n  isLoading: false,\n  isLoaded: false,\n};\n\nexport const reducer = (state = initialState, action) => {\n  const filterComments = (array, id) => (\n    array.filter(comment => comment.id !== id)\n  );\n\n  switch (action.type) {\n    case ACTION_TYPES.START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n    case ACTION_TYPES.HANDLE_SUCCESS:\n      return {\n        ...state,\n        users: action.payload.users,\n        posts: action.payload.posts,\n        comments: action.payload.comments,\n        isLoaded: true,\n        isLoading: false,\n      };\n    case ACTION_TYPES.HANDLE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: false,\n      };\n    case ACTION_TYPES.HANDLE_DELETE_POST:\n      return {\n        ...state,\n        posts: [...state.posts]\n          .filter(post => post.id !== action.payload),\n      };\n    case ACTION_TYPES.HANDLE_DELETE_COMMENT:\n      return {\n        ...state,\n        comments: filterComments(state.comments, action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer } from './reducer';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;\n","import ACTION_TYPES from './actionTypes';\n\nexport const startLoading = () => ({ type: ACTION_TYPES.START_LOADING });\nexport const handleError = () => ({ type: ACTION_TYPES.HANDLE_ERROR });\n\nexport const handleSuccess = ({ users, comments, posts }) => ({\n  type: ACTION_TYPES.HANDLE_SUCCESS,\n  payload: { users, comments, posts },\n});\n\nexport const deletePost = itemId => ({\n  type: ACTION_TYPES.HANDLE_DELETE_POST,\n  payload: itemId,\n});\n\nexport const deleteComment = itemId => ({\n  type: ACTION_TYPES.HANDLE_DELETE_COMMENT,\n  payload: itemId,\n});\n","import { handleError, startLoading, handleSuccess } from '../actions';\n\nconst loadPostsAndUsers = () => (dispatch) => {\n  const usersApi = 'https://jsonplaceholder.typicode.com/users';\n  const commentsApi = 'https://jsonplaceholder.typicode.com/comments';\n  const postsApi = 'https://jsonplaceholder.typicode.com/posts';\n  dispatch(startLoading());\n\n  function getData() {\n    Promise.all([\n      fetch(postsApi),\n      fetch(usersApi),\n      fetch(commentsApi),\n    ])\n      .then(([res1, res2, res3]) => Promise\n        .all([res1.json(), res2.json(), res3.json()]))\n      .then(([posts, users, comments]) => {\n        dispatch(handleSuccess({ posts, users, comments }));\n      })\n      .catch(() => {\n        dispatch(handleError());\n      });\n  }\n  getData();\n};\n\nexport default loadPostsAndUsers;\n","import { deletePost } from '../actions';\n\nconst deletePostFromList = itemId => (dispatch) => {\n  dispatch(deletePost(itemId));\n};\n\nexport default deletePostFromList;\n","import React from 'react';\nimport './User.scss';\n\nfunction User({ user }) {\n  const {\n    name, username, email, address,\n  } = user;\n\n  return (\n    <div className=\"user d-flex flex-column\">\n      <h2>{name}</h2>\n      <p>{username}</p>\n      <p>{email}</p>\n      {address && (\n        <div className=\"user__adress align-self-end mr-3\">\n          <p className=\"user__adress-street font-weight-bold\">{address.street}</p>\n          <p className=\"user__adress-suite font-weight-bold\">{address.suite}</p>\n          <p className=\"user__adress-city font-weight-bold\">{address.city}</p>\n          <p className=\"user__adress-zipcode font-weight-bold\">{address.zipcode}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default User;\n","import { deleteComment } from '../actions';\n\nconst deleteCommentFromPost = ids => (dispatch) => {\n  dispatch(deleteComment(ids));\n};\n\nexport default deleteCommentFromPost;\n","import React from 'react';\nimport './Comment.scss';\n\nfunction Comment({ comment, deleteCommentFromPost }) {\n  const { name, email, body } = comment;\n\n  return (\n    <div\n      className=\"\n        d-flex flex-column\n        border-3 border-success\n        rounded\n        p-3 m-3\"\n    >\n      <button\n        className=\"btn btn-danger align-self-end mb-3\"\n        type=\"button\"\n        onClick={deleteCommentFromPost}\n      >\nX\n      </button>\n      <h4>{name}</h4>\n      <p>{email}</p>\n      <p>{body}</p>\n    </div>\n  );\n}\n\nexport default Comment;\n","import { connect } from 'react-redux';\nimport deleteCommentFromPost from '../store/functions/deleteComment';\nimport Comment from '../components/Comment/Comment';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  deleteCommentFromPost: () => dispatch(deleteCommentFromPost(ownProps.comment.id)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Comment);\n","import React from 'react';\nimport './CommentsList.scss';\nimport Comment from '../../containers/CommentHandler';\n\nfunction CommentsList({ comments }) {\n  return (\n    <div className=\"comments\">\n      {comments.map(comment => <Comment key={comment.id} comment={comment} />)}\n    </div>\n  );\n}\n\nexport default CommentsList;\n","import React from 'react';\nimport './Post.scss';\nimport User from '../User/User';\nimport CommentsList from '../CommentsList/CommentsList';\n\nfunction Post({ post, deletePostFromList }) {\n  const { user, comments } = post;\n  return (\n    <div\n      className=\"d-flex flex-column\n        border-3 border-warning\n        rounded\n        p-3 m-3\"\n    >\n      <button\n        className=\"btn btn-danger align-self-end m-3\"\n        type=\"button\"\n        onClick={deletePostFromList}\n      >\n        X\n      </button>\n      <User user={user} />\n      <h2 className=\"post__name\">{`Title: ${post.title}`}</h2>\n      <p className=\"post__body\">{`Body: ${post.body}`}</p>\n      <CommentsList comments={comments} />\n    </div>\n  );\n}\n\nexport default Post;\n","import { connect } from 'react-redux';\nimport deletePostFromList from '../store/functions/deletePost';\nimport Post from '../components/Post/Post';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  deletePostFromList: () => dispatch(deletePostFromList(ownProps.post.id)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Post);\n","import React, { useState } from 'react';\nimport Post from '../../containers/PostHandler';\nimport './PostsList.scss';\n\nfunction PostsList(props) {\n  const {\n    preparedPosts, isLoading, hasError, isLoaded,\n  } = props;\n\n  const [search, setSearch] = useState('');\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const filteredPosts = preparedPosts\n    .filter(post => post.title.indexOf(search) !== -1\n      || post.body.indexOf(search) !== -1);\n\n  console.log('select');\n\n  return (\n    (isLoading && (\n      <div>\n        <p>Loading...</p>\n        <button\n          type=\"button\"\n          onClick={props.loadPostsAndUsers}\n        >\n            Load\n        </button>\n      </div>\n    ))\n    || (hasError && (\n      <p>Error occurred!!!</p>\n    ))\n    || (!isLoaded && (\n      <>\n        <p>No users yet</p>\n        <button\n          type=\"button\"\n          onClick={props.loadPostsAndUsers}\n        >\n                    Load\n        </button>\n      </>\n    ))\n    || (\n      <div className=\"post-list container\">\n        <div className=\"row\">\n          <div className=\"col-12 text-center\">\n            <input\n              id=\"myInput\"\n              className=\"text-center\"\n              type=\"search\"\n              placeholder=\"search please\"\n              value={search}\n              onChange={updateSearch}\n            />\n          </div>\n          {filteredPosts.map(post => (\n            <Post key={post.id} post={post} />\n          ))}\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default PostsList;\n","import { createSelector } from 'reselect';\n\nconst usersSelector = state => state.users;\nconst postsSelector = state => state.posts;\nexport const commentsSelector = state => state.comments;\n\nexport const selectPosts = createSelector(\n  usersSelector,\n  postsSelector,\n  commentsSelector,\n  (users, posts, comments) => posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }))\n);\n","import { connect } from 'react-redux';\nimport loadPostsAndUsers from '../store/functions/fetchPostsAndUsers';\nimport PostList from '../components/PostList/PostList';\nimport { selectPosts } from '../store/selectors';\n\nconst mapStateToProps = state => ({\n  preparedPosts: selectPosts(state),\n  isLoading: state.isLoading,\n  isLoaded: state.isLoaded,\n  hasError: state.hasError,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  loadPostsAndUsers: () => dispatch(loadPostsAndUsers()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostList);\n","import React from 'react';\nimport PostList from './containers/PostListHandler';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Redux list of posts</h1>\n      <PostList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost.\n        // Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}