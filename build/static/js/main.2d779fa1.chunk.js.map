{"version":3,"sources":["components/redux/actions.js","components/redux/rootReducer.js","components/redux/store.js","components/redux/selectors.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","components/Buttons.js","App.js","index.js"],"names":["ACTION_TYPES","SAVE","SET_LOAD_ERROR","START_LOADING","STOP_LOADING","DELETE_POST","DELETE_COMMENT","FILTER","FILTER_BUTTON","buttonFilter","chosenFilter","dispatch","type","payload","filterButton","filterAction","value","filter","commentDelete","commentId","deleteComment","postDelete","postId","deletePost","urls","postsURL","promises","map","url","fetch","then","y","json","Promise","all","results","data","catch","error","setError","message","finally","initialState","isLoading","preparedPosts","prepare","_preparedPosts","Object","slicedToArray","posts","users","comments","post","objectSpread2","user","find","userId","id","comment","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","store","createStore","state","arguments","length","undefined","action","_ref","_ref2","_ref3","body","includes","_ref4","title","applyMiddleware","apply","rootSelector","selectList","createSelector","selectFilter","selectListError","selectIsLoading","User","react_default","a","createElement","name","Comments","connect","email","Button","icon","Icon","onClick","e","preventDefault","commentDeletor","CommentList","components_Comment","key","Post","components_User","components_CommentList","postDeletor","PostList","className","components_Post","ButtonsList","filterbutton","filterCanged","loadData","Fragment","Input","placeholder","onChange","target","color","Buttons","defaultProps","App","components_Buttons","components_PostList","Enhanced","stopLoading","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.2d779fa1.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SAVE: 'SAVE',\n  SET_LOAD_ERROR: 'SET_LOAD_ERROR',\n  START_LOADING: 'START_LOADING',\n  STOP_LOADING: 'STOP_LOADING',\n  DELETE_POST: 'DELETE_POST',\n  DELETE_COMMENT: 'DELETE_COMMENT',\n  FILTER: 'FILTER',\n  FILTER_BUTTON: 'FILTER_BUTTON',\n};\n\nconst save = data => ({\n  type: ACTION_TYPES.SAVE,\n  payload: data,\n});\n\nconst setError = error => ({\n  type: ACTION_TYPES.SET_LOAD_ERROR,\n  payload: error,\n});\n\nconst startLoading = () => ({\n  type: ACTION_TYPES.START_LOADING,\n});\n\nconst stopLoading = () => ({\n  type: ACTION_TYPES.STOP_LOADING,\n});\n\nconst deletePost = postId => ({\n  type: ACTION_TYPES.DELETE_POST,\n  postId,\n});\n\nconst deleteComment = commentId => ({\n  type: ACTION_TYPES.DELETE_COMMENT,\n  commentId,\n});\n\nconst filter = value => ({\n  type: ACTION_TYPES.FILTER,\n  payload: value,\n});\n\nconst filterButton = chosenFilter => ({\n  type: ACTION_TYPES.FILTER_BUTTON,\n  payload: chosenFilter,\n});\n\nexport const buttonFilter = chosenFilter => (dispatch) => {\n  dispatch(filterButton(chosenFilter));\n};\n\nexport const filterAction = value => (dispatch) => {\n  dispatch(filter(value));\n};\n\nexport const commentDelete = commentId => (dispatch) => {\n  dispatch(deleteComment(commentId));\n};\n\nexport const postDelete = postId => (dispatch) => {\n  dispatch(deletePost(postId));\n};\n\nconst urls = [\n  'https://jsonplaceholder.typicode.com/posts',\n  'https://jsonplaceholder.typicode.com/users',\n  'https://jsonplaceholder.typicode.com/comments',\n];\n\nexport const postsURL = () => (dispatch) => {\n  dispatch(startLoading());\n\n  const promises = urls.map(url => fetch(url).then(y => y.json()));\n\n  Promise.all(promises).then((results) => {\n    dispatch(save(results));\n  })\n    .catch(error => dispatch(setError(error.message)))\n    .finally(() => dispatch(stopLoading()));\n};\n","import { ACTION_TYPES } from './actions';\n\nconst initialState = {\n  isLoading: false,\n  error: false,\n  preparedPosts: [],\n  filter: '',\n};\n\nfunction prepare(preparedPosts) {\n  const [posts, users, comments] = preparedPosts;\n\n  if (posts && users && comments) {\n    return posts.map(post => ({\n      ...post,\n      user: users.find(user => post.userId === user.id),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n  }\n\n  return [];\n}\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE: {\n      const { payload } = action;\n\n      return {\n        ...state,\n        error: false,\n        preparedPosts: prepare(payload),\n      };\n    }\n\n    case ACTION_TYPES.SET_LOAD_ERROR: {\n      return {\n        ...state,\n        error: true,\n        preparedPosts: [],\n      };\n    }\n\n    case ACTION_TYPES.START_LOADING: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n\n    case ACTION_TYPES.STOP_LOADING: {\n      return {\n        ...state,\n        isLoading: false,\n      };\n    }\n\n    case ACTION_TYPES.DELETE_POST: {\n      const { postId } = action;\n\n      return {\n        ...state,\n        preparedPosts: state.preparedPosts.filter(({ id }) => id !== postId),\n      };\n    }\n\n    case ACTION_TYPES.DELETE_COMMENT: {\n      const { commentId } = action;\n\n      return {\n        ...state,\n        preparedPosts: state.preparedPosts.map(post => ({\n          ...post,\n          comments: post.comments.filter(({ id }) => id !== commentId),\n        })),\n      };\n    }\n\n    case ACTION_TYPES.FILTER: {\n      const { payload } = action;\n\n      return {\n        ...state,\n        filter: payload,\n      };\n    }\n\n    case ACTION_TYPES.FILTER_BUTTON: {\n      const { payload } = action;\n\n      switch (payload) {\n        case 'Post Text':\n          return {\n            ...state,\n            preparedPosts:\n              state.preparedPosts.filter(\n                ({ body }) => body.includes(state.filter)\n              ),\n          };\n        case 'Post Title':\n          return {\n            ...state,\n            preparedPosts: state.preparedPosts.filter(\n              ({ title }) => title.includes(state.filter)\n            ),\n          };\n        default:\n          return {\n            ...state,\n            preparedPosts: state.preparedPosts,\n          };\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  || compose();\n\nconst middlewares = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectList = createSelector(\n  rootSelector,\n  ({ preparedPosts }) => preparedPosts\n);\n\nexport const selectFilter = createSelector(\n  rootSelector,\n  ({ filter }) => filter\n)\n\nexport const selectListError = createSelector(\n  rootSelector,\n  ({ error }) => error\n);\n\nexport const selectIsLoading = createSelector(\n  rootSelector,\n  ({ isLoading }) => isLoading\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td>\n    {user.name}\n  </td>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { commentDelete } from './redux/actions';\n\nconst Comment = ({ comment, deleteComment }) => {\n  const commentDeletor = (e, commentId) => {\n    e.preventDefault();\n    deleteComment(commentId);\n  };\n\n  return (\n    <tr>\n      <td>\n        <p>\n          Author:\n          {comment.name}\n        </p>\n        <p>\n          Email:\n          {comment.email}\n        </p>\n      </td>\n      <td>{comment.body}</td>\n      <td>\n        <Button icon>\n          <Icon\n            name=\"delete\"\n            onClick={e => commentDeletor(e, comment.id)}\n          />\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nconst mapDispatch2Props = dispatch => ({\n  deleteComment: commentId => dispatch(commentDelete(commentId)),\n});\n\nconst Comments = connect(\n  null,\n  mapDispatch2Props,\n)(Comment);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    body: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nexport default Comments;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comments from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <table>\n    {comments.map(comment => (\n      <Comments\n        comment={comment}\n        key={comment.id}\n      />\n    ))}\n  </table>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Icon } from 'semantic-ui-react';\nimport User from './User';\nimport CommentList from './CommentList';\nimport { postDelete } from './redux/actions';\n\nconst Posts = ({ post, deletePost }) => {\n  const postDeletor = (e, postId) => {\n    e.preventDefault();\n    deletePost(postId);\n  };\n\n  return (\n    <tr>\n      <td>{post.title}</td>\n      <td>{post.body}</td>\n      <User user={post.user} />\n      <CommentList\n        comments={post.comments}\n      />\n      <td>\n        <Button icon>\n          <Icon\n            name=\"user delete\"\n            onClick={e => postDeletor(e, post.id)}\n          />\n        </Button>\n      </td>\n    </tr>\n  );\n};\n\nconst mapDispatch2Props = dispatch => ({\n  deletePost: postId => dispatch(postDelete(postId)),\n});\n\nconst Post = connect(\n  null,\n  mapDispatch2Props,\n)(Posts);\n\nPosts.propTypes = {\n  deletePost: PropTypes.func.isRequired,\n  post: PropTypes.shape({\n    comments: PropTypes.string,\n    body: PropTypes.string,\n    title: PropTypes.string,\n    id: PropTypes.number,\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Posts from './Post';\n\nconst PostList = ({ posts }) => (\n  <table className=\"ui red table\">\n    <thead>\n      <tr>\n        <th>Title</th>\n        <th>The text of the post</th>\n        <th>Authors name</th>\n        <th>post comments</th>\n      </tr>\n    </thead>\n    <tbody>\n      {posts.map(post => (\n        <Posts\n          post={post}\n          key={post.id}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  postsURL,\n  filterAction,\n  buttonFilter,\n} from './redux/actions';\nimport {\n  selectFilter,\n} from './redux/selectors';\n\nconst ButtonsList = ({ filterbutton, filterCanged, filter, loadData }) => (\n  <>\n    <Input\n      type=\"text\"\n      placeholder=\"What are you searching?\"\n      onChange={e => filterCanged(e.target.value)}\n      value={filter}\n    />\n    <Button type=\"button\" onClick={() => filterbutton('Post Text')}>\n      Post Text\n    </Button>\n    <Button type=\"button\" onClick={() => filterbutton('Post Title')}>\n      Post Title\n    </Button>\n    <Button type=\"button\" onClick={() => loadData(true)} color=\"facebook\">\n      Refresh\n    </Button>\n  </>\n);\n\nfunction mapState2Props(state) {\n  return {\n    filter: selectFilter(state),\n  };\n}\n\nconst mapDispatch2Props = dispatch => ({\n  loadData: () => dispatch(postsURL()),\n  filterCanged: value => dispatch(filterAction(value)),\n  filterbutton: chosenFilter => dispatch(buttonFilter(chosenFilter)),\n});\n\nconst Buttons = connect(\n  mapState2Props,\n  mapDispatch2Props,\n)(ButtonsList);\n\nButtonsList.propTypes = {\n  filterCanged: PropTypes.func.isRequired,\n  filterbutton: PropTypes.func.isRequired,\n  loadData: PropTypes.func.isRequired,\n  filter: PropTypes.string,\n};\n\nButtonsList.defaultProps = {\n  filter: '',\n};\n\nexport default Buttons;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  postsURL,\n  ACTION_TYPES,\n} from './components/redux/actions';\nimport {\n  selectIsLoading,\n  selectList,\n  selectListError,\n} from './components/redux/selectors';\nimport PostList from './components/PostList';\nimport ButtonsList from './components/Buttons';\nimport './App.css';\n\nconst App = ({\n  isLoading,\n  error,\n  preparedPosts,\n  loadData,\n}) => {\n  if (isLoading) {\n    return (\n      <p>loading...</p>\n    );\n  }\n\n  if (error) {\n    return (\n      <>\n        <p>Error occurred!!!</p>\n        <Button\n          type=\"button\"\n          onClick={() => loadData(true)}\n        >\n          Try Again!\n        </Button>\n      </>\n    );\n  }\n\n  if (!preparedPosts || !preparedPosts.length) {\n    return (\n      <>\n        <p>No posts yet!</p>\n        <Button type=\"button\" onClick={() => loadData(true)} color=\"green\">\n          Load\n        </Button>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>List of posts</h1>\n      <ButtonsList />\n      <PostList\n        posts={preparedPosts}\n      />\n    </div>\n  );\n};\n\nfunction mapState2Props(state) {\n  return {\n    preparedPosts: selectList(state),\n    error: selectListError(state),\n    isLoading: selectIsLoading(state),\n  };\n}\n\nconst mapDispatch2Props = dispatch => ({\n  loadData: () => dispatch(postsURL()),\n  stopLoading: isLoading => dispatch({\n    type: ACTION_TYPES.STOP_LOADING,\n    isLoading,\n  }),\n});\n\nconst Enhanced = connect(\n  mapState2Props,\n  mapDispatch2Props,\n)(App);\n\nexport { Enhanced as App };\n\nApp.propTypes = {\n  loadData: PropTypes.func.isRequired,\n  preparedPosts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isLoading: PropTypes.bool,\n  error: PropTypes.bool,\n};\n\nApp.defaultProps = {\n  error: false,\n  isLoading: false,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './components/redux/store';\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}