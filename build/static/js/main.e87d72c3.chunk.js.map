{"version":3,"sources":["components/store/store.js","components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","components/App/App.js","components/App/index.js","index.js"],"names":["ACTION_TYPES","ADD_DATA","LOAD_DATA","SORT_DATA","INPUT_NAME","USER_LIST","RESET_SORT","loadData","data","type","payload","initialState","originalData","sortedData","users","usersToDisplay","inputtedName","isLoading","getData","dispatch","store","Promise","all","fetch","then","_ref","_ref2","Object","slicedToArray","res1","res2","res3","json","_ref3","_ref4","comments","posts","map","post","_objectSpread","filter","comment","postId","id","user","reduce","acc","defineProperty","userId","fullData","userList","createStore","state","arguments","length","undefined","action","toConsumableArray","name","toLowerCase","includes","applyMiddleware","thunk","User","email","react_default","a","createElement","concat","address","city","street","suite","Comment","body","className","CommentList","components_Comment_Comment","key","Post","title","components_User_User","components_CommentList_CommentList","PostList","fullPosts","components_Post_Post","App","handleEnteredName","target","_this","props","inputName","value","sortData","_this$props","this","resetSort","console","log","onClick","person","onChange","placeholder","components_PostList_PostList","React","Component","EnhancedApp","connect","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.e87d72c3.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst COMMENTS_API_URL = 'https://jsonplaceholder.typicode.com/comments';\nconst USERS_API_URL = 'https://jsonplaceholder.typicode.com/users';\nconst POSTS_API_URL = 'https://jsonplaceholder.typicode.com/posts';\n\nconst ACTION_TYPES = {\n  ADD_DATA: 'DATA::ADD',\n  LOAD_DATA: 'LOAD::ADD',\n  SORT_DATA: 'SORT::DATA',\n  INPUT_NAME: 'NAME::ADD',\n  USER_LIST: 'USER::LIST',\n  RESET_SORT: 'SORT::RESET',\n};\n\nfunction fullData(comments, users, posts) {\n  return posts.map(post => ({\n    ...post,\n    comments: comments.filter(comment => comment.postId === post.id),\n    user: users.reduce((acc, user) => (\n      { ...acc, [user.id]: user }), {})[post.userId],\n  }));\n}\n\nconst userList = data => ({\n  type: ACTION_TYPES.USER_LIST,\n  payload: data,\n});\n\nexport const addData = data => ({\n  type: ACTION_TYPES.ADD_DATA,\n  payload: data,\n});\n\nexport const sortData = data => ({\n  type: ACTION_TYPES.SORT_DATA,\n  payload: data,\n});\n\nexport const resetSort = data => ({\n  type: ACTION_TYPES.RESET_SORT,\n  payload: data,\n});\n\nexport const inputName = data => ({\n  type: ACTION_TYPES.INPUT_NAME,\n  payload: data,\n});\n\nconst loadData = data => ({\n  type: ACTION_TYPES.LOAD_DATA,\n  payload: data,\n});\n\nconst initialState = {\n  originalData: [],\n  sortedData: [],\n  users: [],\n  usersToDisplay: [],\n  inputtedName: '',\n  isLoading: false,\n};\n\nexport const getData = () => (dispatch) => {\n  store.dispatch(loadData());\n  Promise.all([\n    fetch(COMMENTS_API_URL),\n    fetch(USERS_API_URL),\n    fetch(POSTS_API_URL),\n  ])\n    .then(([res1, res2, res3]) => Promise.all([\n      res1.json(),\n      res2.json(),\n      res3.json(),\n    ]))\n    .then(([comments, users, posts]) => store.dispatch(addData(fullData(comments, users, posts)),\n      store.dispatch(userList(users)),\n      store.dispatch(loadData())));\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_DATA: {\n      return {\n        ...state,\n        originalData: action.payload,\n        sortedData: action.payload,\n      };\n    }\n    case ACTION_TYPES.LOAD_DATA: {\n      return {\n        ...state,\n        isLoading: !state.isLoading,\n      };\n    }\n    case ACTION_TYPES.RESET_SORT: {\n      return {\n        ...state,\n        sortedData: [...state.originalData],\n        inputtedName: '',\n        usersToDisplay: [...state.users],\n      };\n    }\n    case ACTION_TYPES.SORT_DATA: {\n      return {\n        ...state,\n        sortedData: [...state.originalData].filter(data => (\n          data.user.name.toLowerCase().includes(state.inputtedName))),\n        usersToDisplay: [...state.users].filter(data => (\n          data.name.toLowerCase().includes(state.inputtedName))),\n      };\n    }\n    case ACTION_TYPES.INPUT_NAME: {\n      return {\n        ...state,\n        inputtedName: action.payload,\n      };\n    }\n    case ACTION_TYPES.USER_LIST: {\n      return {\n        ...state,\n        users: action.payload,\n        usersToDisplay: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nfunction User({ user }) {\n  const { name, email } = user;\n\n  return (\n    <div>\n      <div>{name}</div>\n      <div>{email}</div>\n      <div>\n        {`\n          ${user.address.city},\n          ${user.address.street},\n          ${user.address.suite}\n        `}\n      </div>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Comment.css';\n\nfunction Comment({ comment }) {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"comment\">\n      <div>{body}</div>\n      <div>\n        <p>{name}</p>\n        <p>\n          {email}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from '../Comment/Comment';\nimport './CommentList.css';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comments\">\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))\n    }\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf({\n    comment: PropTypes.shape({\n      body: PropTypes.string,\n      email: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Post.css';\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\n\nfunction Post({ post }) {\n  const { title, body, comments } = post;\n\n  return (\n    <div className=\"post\">\n      <div>\n        <h2>{title}</h2>\n        <p>{body}</p>\n        <User user={post.user} />\n      </div>\n\n      <CommentList comments={comments} />\n    </div>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from '../Post/Post';\nimport './PostList.css';\n\nconst PostList = ({ fullPosts }) => fullPosts.map(post => (\n  <Post post={post} key={post.id} />\n));\n\nexport default PostList;\n","import React from 'react';\nimport PostList from '../PostList/PostList';\n\nimport './App.css';\n\nclass App extends React.Component {\n  handleEnteredName = ({ target }) => {\n    this.props.inputName(target.value.toLowerCase());\n    this.props.sortData();\n  }\n\n  render() {\n    const {\n      isLoading, sortedData, getData, usersToDisplay, originalData, resetSort, inputtedName,\n    } = this.props;\n    console.log(usersToDisplay);\n\n    if (isLoading) {\n      return (\n        <div className=\"app\">\n          <p>Loading ...</p>\n        </div>\n      );\n    }\n\n    if (originalData.length === 0) {\n      return (\n        <div className=\"app\">\n          <button type=\"button\" onClick={getData}> Show posts </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"app\">\n        <h1>Dynamic list of posts</h1>\n        <p>\n          Posts:\n          {sortedData.length}\n        </p>\n        <h2>Posted users name: </h2>\n        {usersToDisplay.map(person => (\n          <b>\n            {person.name}\n            <br />\n          </b>\n        ))}\n        <input\n          onChange={this.handleEnteredName}\n          value={inputtedName}\n          placeholder=\" input user name\"\n        />\n        <br />\n        <button type=\"button\" onClick={resetSort}>Reset</button>\n        <PostList fullPosts={sortedData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { getData, sortData, inputName, resetSort } from '../store/store';\n\nconst mapDispatchToProps = dispatch => ({\n  getData: () => dispatch(getData()),\n  sortData: () => dispatch(sortData()),\n  inputName: value => dispatch(inputName(value)),\n  resetSort: () => dispatch(resetSort()),\n});\n\nconst EnhancedApp = connect(\n  state => ({\n    sortedData: state.sortedData,\n    isLoading: state.isLoading,\n    inputtedName: state.inputtedName,\n    usersToDisplay: state.usersToDisplay,\n    originalData: state.originalData,\n  }),\n  mapDispatchToProps,\n)(App);\n\nexport {\n  EnhancedApp as App,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './components/store/store';\nimport { App } from './components/App/index';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}