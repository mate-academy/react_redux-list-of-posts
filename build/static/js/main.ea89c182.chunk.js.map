{"version":3,"sources":["API_DATA.js","User.js","Comment.js","CommentList.js","Post.js","PostsList.jsx","App.js","index.js"],"names":["loadPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","responsePosts","posts","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","loadUsers","_ref2","_callee2","responseUsers","users","_context2","loadComments","_ref3","_callee3","responseComments","comments","_context3","User","userItem","react_default","createElement","className","name","username","email","Comment","body","CommentList","map","comment","src_Comment","Post","state","showComment","_this2","post","props","src_User","user","title","tabIndex","role","onKeyDown","onClick","setState","src_CommentList","React","Component","TodosList","loadData","postsWithCommentsAndUsers","_this","loading","_objectSpread","filter","id","postId","find","userId","setData","filterPosts","length","type","onChange","event","handleChangeFilter","target","value","placeholder","src_Post","isLoading","connect","dispatch","data","isLoaded","store","createStore","action","App_objectSpread","join","toLowerCase","includes","App","es","PostsList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ea89c182.chunk.js","sourcesContent":["\nexport const loadPosts = async() => {\n  const urlPosts = 'https://jsonplaceholder.typicode.com/posts';\n  const responsePosts = await fetch(urlPosts);\n  const posts = await responsePosts.json();\n\n  return posts;\n};\n\nexport const loadUsers = async() => {\n  const urlUsers = 'https://jsonplaceholder.typicode.com/users';\n  const responseUsers = await fetch(urlUsers);\n  const users = await responseUsers.json();\n\n  return users;\n};\n\nexport const loadComments = async() => {\n  const urlComments = 'https://jsonplaceholder.typicode.com/comments';\n  const responseComments = await fetch(urlComments);\n  const comments = await responseComments.json();\n\n  return comments;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ userItem }) => (\n  <div className=\"user_information\">\n    <p>\n      <b>Name</b>\n      {' '}\n      {userItem.name}\n    </p>\n    <p>\n      <b>Nick name</b>\n      {' '}\n      {userItem.username}\n    </p>\n    <p>\n      <b>Email</b>\n      {' '}\n      {userItem.email}\n    </p>\n  </div>\n);\n\nUser.propTypes = {\n  userItem: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comments }) => (\n  <div className=\"comments\">\n    <br />\n    <b>Comment</b>\n    {' '}\n    {comments.body}\n  </div>\n);\n\nComment.propTypes = {\n  comments: PropTypes.shape({\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <p>\n    {comments.map(comment => <Comment comments={comment} />)}\n  </p>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object])).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nclass Post extends React.Component {\n  state = {\n    showComment: false,\n  }\n\n  render() {\n    const { post } = this.props;\n\n    return (\n      <li\n        className=\"post_list\"\n      >\n        <User userItem={post.user} />\n        <p className=\"post_title\">\n          <b>Title</b>\n          {' '}\n          {post.title}\n        </p>\n\n        <p className=\"post_body\">{post.body}</p>\n        <div\n          tabIndex={0}\n          role=\"button\"\n          onKeyDown={() => {}}\n          className=\"show_comments\"\n          onClick={() => this.setState(state => ({\n            showComment: !state.showComment,\n          }))}\n        >\n          <p className=\"view-comments\">\n            {this.state.showComment\n              ? 'Hide comments'\n              : 'View comments'}\n          </p>\n        </div>\n        {\n          this.state.showComment\n            ? <CommentList comments={post.comments} />\n            : ''\n        }\n      </li>\n    );\n  }\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    user: PropTypes.string,\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { loadPosts, loadUsers, loadComments } from './API_DATA';\nimport Post from './Post'\nimport './App.css'\n\n\nconst getData = (state) => ({\n  filterPosts: state.filterPosts,\n  isLoading: state.isLoading,\n})\n\nconst getMethods = (dispatch) => ({\n  loading: () => dispatch({\n    type: 'LOADING',\n    isLoading: true,\n  }),\n\n  setData: (data) => dispatch({\n    type: 'SET_DATA',\n    value: data,\n    isLoading: false,\n    isLoaded: true,\n   }),\n\n  handleChangeFilter: (value) => dispatch({\n    type: 'FILTER_POSTS',\n    value: value,\n  }),\n})\n\nclass  TodosList extends React.Component {\n\n  loadData = async() => {\n    this.props.loading()\n\n    const users = await loadUsers();\n    const posts = await loadPosts();\n    const comments = await loadComments();\n\n    const postsWithCommentsAndUsers = posts.map(post => ({\n      ...post,\n      comments: comments.filter(comment => post.id === comment.postId),\n      user: users.find(user => user.id === post.userId),\n    }));\n\n    this.props.setData(postsWithCommentsAndUsers)\n  }\n\n  render() {\n    const { filterPosts } = this.props\n\n    return (\n      <div>\n        {filterPosts.length\n          ? (<div className=\"App\">\n              <div className=\"search_list\">\n                <input\n                  className=\"search_field\"\n                  type=\"text\"\n                  onChange={(event) => this.props.handleChangeFilter(event.target.value)}\n                  placeholder=\"Search\"\n                />\n              </div>\n              <div>\n                {filterPosts.map(post => (\n                <div>\n                  <Post post={post}/>\n                </div>\n              ))}\n              </div>\n            </div>\n            ) : (\n                  <div className='button_load'>\n                    <button\n                      onClick={this.loadData}\n                      type=\"button\"\n                      className=\"button\"\n                    >\n                     {this.props.isLoading ? 'Loading' : 'Load'}\n                    </button>\n                    </div>\n                )\n          }\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  getData,\n  getMethods\n)(TodosList);\n","import React from 'react';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport PostsList from './PostsList'\n\nconst initialState = {\n  posts: [],\n  filterPosts: [],\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FILTER_POSTS':\n      return {\n        ...state,\n        filterPosts: state.posts.filter(post => (\n          [post.title, post.body]\n            .join('')\n            .toLowerCase()\n            .includes(action.value.toLowerCase())\n        ))\n      }\n      case 'SET_DATA':\n        return {\n          posts: action.value,\n          filterPosts: action.value,\n          isLoading: false,\n          isLoaded: true,\n        }\n\n      case 'LOADING':\n        return {\n          ...state,\n          isLoading: true,\n        }\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer, initialState)\n\nconst App = () => (\n  <Provider store={store}>\n    <PostsList />\n  </Provider>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}