{"version":3,"sources":["store/actions.js","store/reducer.js","store/store.js","components/User/User.js","components/Comment/Comment.js","components/Comment/index.js","components/CommentList/CommentList.js","components/Post/Post.js","components/Post/index.js","components/PostsList/PostsList.js","components/App/App.js","store/functions.js","store/selectors.js","components/App/index.js","serviceWorker.js","index.js"],"names":["ACTION_TYPES","LOAD","HANDLE_SUCCESS","HANDLE_ERROR","HANDLE_REMOVE_POST","HANDLE_REMOVE_COMMENT","handleSuccess","_ref","posts","users","comments","type","payload","handleError","initialState","loaded","isLoading","hasError","store","createStore","state","arguments","length","undefined","action","_objectSpread","Object","toConsumableArray","filter","post","id","comment","composeWithDevTools","applyMiddleware","thunk","User","user","email","name","_user$address","address","street","suite","city","zipcode","react_default","a","createElement","className","Comment","props","_props$comment","body","onClick","handleRemoveComment","charAt","toUpperCase","slice","connect","dispatch","ownProps","CommentList","map","components_Comment","key","Post","handleRemovePost","components_User_User","title","components_CommentList_CommentList","PostsList","components_Post","App","preparedPosts","loadDatas","_useState","useState","_useState2","slicedToArray","search","setSearch","filteredPosts","includes","Fragment","value","placeholder","onChange","e","target","components_PostsList_PostsList","defaultProps","_load","asyncToGenerator","regenerator_default","mark","_callee","_ref2","usersResponse","postsResponse","commentsResponse","wrap","_context","prev","next","Promise","all","fetch","sent","json","catch","error","stop","apply","this","postsSelector","createSelector","selectors_objectSpread","find","userId","postId","val","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","es","components_App","document","getElementById","URL","process","href","origin","addEventListener","concat","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9ae2cc35.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  LOAD: 'LOAD',\n  HANDLE_SUCCESS: 'HANDLE_SUCCESS',\n  HANDLE_ERROR: 'HANDLE_ERROR',\n  HANDLE_REMOVE_POST: 'HANDLE_REMOVE_POST',\n  HANDLE_REMOVE_COMMENT: 'HANDLE_REMOVE_COMMENT',\n};\n\nconst {\n  LOAD,\n  HANDLE_SUCCESS,\n  HANDLE_ERROR,\n  HANDLE_REMOVE_POST,\n  HANDLE_REMOVE_COMMENT,\n} = ACTION_TYPES;\n\nexport const startLoading = () => ({ type: LOAD });\nexport const handleSuccess = ({ posts, users, comments }) => ({\n  type: HANDLE_SUCCESS,\n  payload: { posts, users, comments },\n});\nexport const handleError = () => ({ type: HANDLE_ERROR });\n\nexport const handleRemovePost = id => ({\n  type: HANDLE_REMOVE_POST,\n  payload: id,\n});\nexport const handleRemoveComment = id => ({\n  type: HANDLE_REMOVE_COMMENT,\n  payload: id,\n});\n","import { ACTION_TYPES } from './actions';\n\nconst {\n  LOAD,\n  HANDLE_SUCCESS,\n  HANDLE_ERROR,\n  HANDLE_REMOVE_POST,\n  HANDLE_REMOVE_COMMENT,\n} = ACTION_TYPES;\n\nexport const initialState = {\n  loaded: false,\n  isLoading: false,\n  hasError: false,\n  posts: [],\n  users: [],\n  comments: [],\n};\n\nexport const reducer = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case LOAD:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        posts: action.payload.posts,\n        users: action.payload.users,\n        comments: action.payload.comments,\n        isLoading: false,\n        hasError: false,\n        loaded: true,\n      };\n\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n      };\n\n    case HANDLE_REMOVE_POST:\n      return {\n        ...state,\n        posts: [...state.posts]\n          .filter(post => post.id !== action.payload),\n      };\n\n    case HANDLE_REMOVE_COMMENT:\n      return {\n        ...state,\n        comments: [...state.comments]\n          .filter(comment => comment.id !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { reducer } from './reducer';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nconst User = ({ user }) => {\n  const { email, name } = user;\n  const {\n    street,\n    suite,\n    city,\n    zipcode,\n  } = user.address;\n\n  return (\n    <div className=\"user\">\n      <div className=\"user__name\">\n        {name}\n      </div>\n      <div className=\"user__email\">\n        {email}\n      </div>\n      <div className=\"user__address\">\n        <div className=\"user__address-street\">\n          {street}\n        </div>\n        <div className=\"user__address-suite\">\n          {suite}\n        </div>\n        <div className=\"user__address-city\">\n          {city}\n        </div>\n        <div className=\"user__address-zipcode\">\n          {zipcode}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default User;\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    address: PropTypes.shape({\n      street: PropTypes.string.isRequired,\n      suite: PropTypes.string.isRequired,\n      city: PropTypes.string.isRequired,\n      zipcode: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-shadow */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport './Comment.css';\nimport PropTypes from 'prop-types';\n\nconst Comment = (props) => {\n  const {\n    name, email, body, id,\n  } = props.comment;\n  return (\n    <div className=\"comment\">\n      <button\n        type=\"button\"\n        className=\"remove remove-comment\"\n        onClick={id => props.handleRemoveComment(id)}\n      >\n          ✕\n      </button>\n      <div className=\"comment__name\">\n        { name.charAt(0).toUpperCase() + name.slice(1) }\n      </div>\n      <div className=\"comment__body\">\n        { body.charAt(0).toUpperCase() + body.slice(1) }\n      </div>\n      <div className=\"comment__email\">\n        { email.charAt(0).toUpperCase() + email.slice(1) }\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n  handleRemoveComment: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport Comment from './Comment';\nimport { handleRemoveComment } from '../../store/actions';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  handleRemoveComment: () => dispatch(handleRemoveComment(ownProps.comment.id)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Comment);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// eslint-disable-next-line no-shadow\nimport Comment from '../Comment';\nimport './CommentList.css';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comment-list\">\n    { comments.map(comment => (\n      <Comment key={comment.id} comment={comment} />\n    ))\n    }\n  </div>\n);\n\nexport default CommentList;\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\nimport './Post.css';\n\nconst Post = (props) => {\n  const {\n    post, handleRemovePost,\n  } = props;\n\n  return (\n    <div className=\"post\">\n      <button\n        type=\"button\"\n        className=\"remove remove-post\"\n        onClick={() => handleRemovePost(post.id)}\n      >\n          ✕\n      </button>\n      <User user={post.user} />\n      <h2 className=\"post__title\">\n        { post.title.charAt(0).toUpperCase() + post.title.slice(1) }\n      </h2>\n      <div className=\"post__body\">\n        { post.body.charAt(0).toUpperCase() + post.body.slice(1) }\n      </div>\n      <CommentList comments={post.comments} />\n    </div>\n  );\n};\n\nexport default Post;\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.number.isRequired,\n    user: PropTypes.shape().isRequired,\n    comments: PropTypes.arrayOf(\n      PropTypes.shape().isRequired,\n    ).isRequired,\n  }).isRequired,\n  handleRemovePost: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport Post from './Post';\nimport { handleRemovePost } from '../../store/actions';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  handleRemovePost: () => dispatch(handleRemovePost(ownProps.post.id)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Post);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from '../Post';\nimport './PostsList.css';\n\nconst PostsList = ({ posts }) => (\n  <div className=\"post-list\">\n    { posts.map(post => (\n      <Post key={post.id} post={post} />\n    ))}\n  </div>\n);\n\nexport default PostsList;\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n};\n","/* eslint-disable react/no-unused-state */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport PostsList from '../PostsList/PostsList';\n\nfunction App(props) {\n  const {\n    preparedPosts,\n    loaded,\n    isLoading,\n    hasError,\n    loadDatas,\n  } = props;\n\n  const [search, setSearch] = useState('');\n\n  const filteredPosts = preparedPosts.filter(post => post.title\n    .includes(search) || post.body.includes(search));\n\n  if (isLoading) {\n    return (\n      <h1>Loading...</h1>\n    );\n  }\n\n  if (hasError) {\n    return (\n      <>\n        <p>Error occured!</p>\n        <button type=\"button\" onClick={loadDatas}>Try again</button>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>react -_redux_- posts</h1>\n      {!loaded\n        ? (\n          <button\n            onClick={loadDatas}\n            className=\"button-start\"\n            type=\"button\"\n          >\n              Load\n          </button>\n        )\n        : (\n          <input\n            className=\"search-input\"\n            value={search}\n            type=\"search\"\n            placeholder=\"Search post\"\n            onChange={e => setSearch(e.target.value)}\n          />\n        )\n      }\n      <PostsList posts={filteredPosts} />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  preparedPosts: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n    }).isRequired,\n  ).isRequired,\n  loadDatas: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  loaded: PropTypes.bool,\n};\n\nApp.defaultProps = {\n  loaded: false,\n};\n\nexport default App;\n","import { handleError, startLoading, handleSuccess } from './actions';\n\nexport const loadDatas = () => (dispatch) => {\n  dispatch(startLoading());\n  (async function load() {\n    const [\n      usersResponse,\n      postsResponse,\n      commentsResponse,\n    ] = await Promise.all([\n      fetch('https://jsonplaceholder.typicode.com/users'),\n      fetch('https://jsonplaceholder.typicode.com/posts'),\n      fetch('https://jsonplaceholder.typicode.com/comments'),\n    ]);\n\n    const users = await usersResponse.json()\n      .catch(error => dispatch(handleError(error)));\n    const posts = await postsResponse.json()\n      .catch(error => dispatch(handleError(error)));\n    const comments = await commentsResponse.json()\n      .catch(error => dispatch(handleError(error)));\n\n    dispatch(handleSuccess({ users, posts, comments }));\n  })();\n};\n\nexport const handleSort = () => {\n\n};\n","import { createSelector } from 'reselect';\n\nexport const getPosts = state => state.posts;\nconst getUsers = state => state.users;\nconst getComments = state => state.comments;\n\nexport const postsSelector = createSelector(\n  getPosts,\n  getUsers,\n  getComments,\n  (posts, users, comments) => posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }))\n);\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { loadDatas } from '../../store/functions';\nimport { postsSelector } from '../../store/selectors';\n\nconst mapStateToProps = state => ({\n  preparedPosts: postsSelector(state),\n  isLoading: state.isLoading,\n  hasError: state.hasError,\n  loaded: state.loaded,\n  val: state.val,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadDatas: () => dispatch(loadDatas()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost.\r\n        // Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}