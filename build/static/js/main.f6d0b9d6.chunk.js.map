{"version":3,"sources":["api.js","postsReducer.js","loadingReducer.js","loadedReducer.js","filterReducer.js","store.js","User.js","Comment.js","CommentList.js","Post.js","PostList.js","App.js","debounce.js","index.js"],"names":["API_URL","getData","BASE_URL","defaultData","fetch","then","response","ok","json","catch","postsReducer","posts","arguments","length","undefined","action","type","value","Object","toConsumableArray","filter","post","id","map","objectSpread2","comments","comment","setLoadingAC","loadingReducer","loading","setLoadedAC","loadedReducer","loaded","filterReducer","getPosts","state","getLoading","getLoaded","getFilter","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","User","_ref","user","react_default","a","createElement","className","name","email","address","street","suite","city","mapDispatchToProps","deleteComment","connect","onClick","body","CommentList","Comment","key","deletePost","title","src_User","src_CommentList","PostList","filterPosts","_useState","useState","_useState2","slicedToArray","inputValue","setinputValue","Fragment","onChange","e","input","target","toLowerCase","trimLeft","src_Post","mapDispatchtoProps","setFilter","loadPosts","dispatch","_ref2","postsFromServer","usersFromServer","commentsFromServer","preparedPosts","regenerator_default","async","_context","prev","next","awrap","Promise","all","concat","sent","find","item","userId","postId","stop","f","delay","timerID","clearTimeout","_len","args","Array","_key","setTimeout","apply","debounce","filteredPosts","includes","src_PostList","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f6d0b9d6.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com/';\n\nconst getData = (BASE_URL, defaultData) => fetch(BASE_URL)\n  .then(response => (response.ok ? response.json() : defaultData))\n  .catch(() => defaultData);\n\nexport const getPostsFromServer = () => getData(`${API_URL}posts`, []);\n\nexport const getUsersFromServer = () => getData(`${API_URL}users`, []);\n\nexport const getCommentsFromServer = () => getData(`${API_URL}comments`, []);\n","export const SET_POSTS = 'SET_POSTS';\nexport const DELETE_POST = 'DELETE_POST';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n\nexport const setPostsAC = value => ({\n  type: SET_POSTS, value,\n});\nexport const deletePostAC = value => ({\n  type: DELETE_POST, value,\n});\nexport const deleteCommentAC = value => ({\n  type: DELETE_COMMENT, value,\n});\n\nconst postsReducer = (posts = [], action) => {\n  switch (action.type) {\n    case SET_POSTS:\n      return action.value;\n    case DELETE_POST:\n      return [...posts].filter(post => post.id !== action.value);\n    case DELETE_COMMENT:\n      return [...posts].map(post => ({\n        ...post,\n        comments: post.comments\n          .filter(comment => comment.id !== action.value),\n      }));\n    default:\n      return posts;\n  }\n};\n\nexport default postsReducer;\n","export const SET_LOADING = 'SET_LOADING';\n\nexport const setLoadingAC = value => ({\n  type: SET_LOADING, value,\n});\n\nconst loadingReducer = (loading = false, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return action.value;\n    default:\n      return loading;\n  }\n};\n\nexport default loadingReducer;\n","export const SET_LOADED = 'SET_LOADED';\n\nexport const setLoadedAC = value => ({\n  type: SET_LOADED, value,\n});\n\nconst loadedReducer = (loaded = false, action) => {\n  switch (action.type) {\n    case SET_LOADED:\n      return action.value;\n    default:\n      return loaded;\n  }\n};\n\nexport default loadedReducer;\n","export const SET_FILTER = 'SET_FILTER';\n\nexport const setFilterAC = value => ({\n  type: SET_FILTER, value,\n});\n\nconst filterReducer = (filter = '', action) => {\n  switch (action.type) {\n    case SET_FILTER:\n      return action.value;\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {\n  getPostsFromServer, getUsersFromServer, getCommentsFromServer,\n} from './api';\nimport postsReducer, { setPostsAC } from './postsReducer';\nimport loadingReducer, { setLoadingAC } from './loadingReducer';\nimport loadedReducer, { setLoadedAC } from './loadedReducer';\nimport filterReducer from './filterReducer';\n\nexport const getPosts = state => state.posts;\nexport const getLoading = state => state.loading;\nexport const getLoaded = state => state.loaded;\nexport const getFilter = state => state.filter;\n\nexport const loadPostsFromServer = () => async(dispatch) => {\n  dispatch(setLoadingAC(true));\n\n  const [postsFromServer,\n    usersFromServer,\n    commentsFromServer] = await Promise.all(\n    [getPostsFromServer(), getUsersFromServer(), getCommentsFromServer()]\n  );\n\n  const preparedPosts = postsFromServer.map((post) => {\n    const user = usersFromServer.find(item => item.id === post.userId);\n    const comments = commentsFromServer\n      .filter(comment => comment.postId === post.id);\n\n    return {\n      ...post, user, comments,\n    };\n  });\n\n  dispatch(setPostsAC(preparedPosts));\n  dispatch(setLoadedAC(true));\n  dispatch(setLoadingAC(false));\n};\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  loading: loadingReducer,\n  loaded: loadedReducer,\n  filter: filterReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div className=\"user\">\n    <b>Post by:</b>\n    <div className=\"user--name\">{user.name}</div>\n    <div className=\"user--email\">{user.email}</div>\n    <div className=\"user--address\">\n      {user.address.street}\n      <br />\n      {user.address.suite}\n      <br />\n      {user.address.city}\n    </div>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.shape({\n      street: PropTypes.string,\n      suite: PropTypes.string,\n      city: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteCommentAC } from './postsReducer';\n\nconst CommentItem = ({ comment, deleteComment }) => (\n  <div className=\"comment\">\n    <button\n      className=\"button--delete\"\n      type=\"button\"\n      onClick={() => deleteComment(comment.id)}\n    >\n      Remove comment\n    </button>\n    <h4 className=\"comment--name\">\n      {comment.name}\n    </h4>\n    <div className=\"comment--email\">\n      {comment.email}\n    </div>\n    <p className=\"comment--body\">{comment.body}</p>\n  </div>\n);\n\nCommentItem.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    body: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.number,\n  }).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  deleteComment: deleteCommentAC,\n};\n\nexport default connect(null, mapDispatchToProps)(CommentItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CommentItem from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comments\">\n    Comments:\n    {comments.map(\n      comment => <CommentItem key={comment.id} comment={comment} />\n    )}\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.object\n  ).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deletePostAC } from './postsReducer';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ post, deletePost }) => (\n  <div className=\"post\">\n    <button\n      className=\"button--delete\"\n      type=\"button\"\n      onClick={() => deletePost(post.id)}\n    >\n      Remove post\n    </button>\n    <h3 className=\"post--header\">\n      {post.title}\n    </h3>\n    <User user={post.user} />\n    <p className=\"post--body\">{post.body}</p>\n    <CommentList comments={post.comments} />\n  </div>\n);\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    user: PropTypes.object,\n    title: PropTypes.string,\n    body: PropTypes.string,\n    id: PropTypes.number,\n    comments: PropTypes.array,\n  }).isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  deletePost: deletePostAC,\n};\n\nexport default connect(null, mapDispatchToProps)(Post);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ posts, filterPosts }) => {\n  const [inputValue, setinputValue] = useState('');\n\n  const handleInput = (input) => {\n    setinputValue(input.toLowerCase().trimLeft());\n    filterPosts(inputValue);\n  };\n\n  return (\n    <>\n      Enter text to filter posts by title or body:&nbsp;\n      <input\n        className=\"filter--input\"\n        type=\"text\"\n        value={inputValue}\n        onChange={e => handleInput(e.target.value)}\n      />\n      <h4>\n        {posts.length}\n        &nbsp;post(s) are shown\n      </h4>\n      {posts.map(\n        post => <Post key={post.id} post={post} />\n      )}\n    </>\n  );\n};\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.object\n  ).isRequired,\n  filterPosts: PropTypes.func.isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { debounce } from './debounce';\nimport {\n  getPosts, getLoading, getLoaded, getFilter, loadPostsFromServer,\n} from './store';\nimport { setFilterAC } from './filterReducer';\nimport PostList from './PostList';\n\nconst App = ({ posts, loading, loaded, filter, loadPosts, setFilter }) => {\n  const filterPosts = debounce((input) => {\n    setFilter(input);\n  }, 500);\n\n  const filteredPosts = posts\n    .filter(post => (post.title + post.body).toLowerCase().includes(filter));\n\n  return (\n    <div className=\"App\">\n      <h1>React-Redux list of posts</h1>\n      {!loaded\n        ? (\n          <button\n            className=\"button--load\"\n            type=\"button\"\n            onClick={loadPosts}\n          >\n            {!loading\n              ? 'Load list of posts'\n              : 'Loading... Please wait...'}\n          </button>\n        )\n        : (\n          <PostList posts={filteredPosts} filterPosts={filterPosts} />\n        )}\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  posts: getPosts(state),\n  loading: getLoading(state),\n  loaded: getLoaded(state),\n  filter: getFilter(state),\n});\n\nconst mapDispatchtoProps = {\n  setFilter: setFilterAC,\n  loadPosts: loadPostsFromServer,\n};\n\nApp.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filter: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  loaded: PropTypes.bool.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  loadPosts: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(App);\n","export const debounce = (f, delay) => {\n  let timerID;\n\n  return (...args) => {\n    clearTimeout(timerID);\n    timerID = setTimeout(f, delay, ...args);\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}