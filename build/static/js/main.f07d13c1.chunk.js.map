{"version":3,"sources":["store/index.js","components/User/User.js","constants/prototypes.js","components/Comment/Comment.js","components/Comment/index.js","components/CommentList/CommentList.js","components/Post/Post.js","components/Post/index.js","components/PostList/PostList.js","components/PostList/index.js","App/App.js","App/index.js","index.js"],"names":["BASE_URL","ACTION_TYPES","START_LOADING","HANDLE_SUCCESS","HANDLE_ERROR","DELETE_POST","DELETE_COMMENT","SEARCH_POST","loadPosts","dispatch","type","Promise","all","fetch","concat","then","_ref","_ref2","Object","slicedToArray","posts","users","comments","json","_ref3","data","_ref4","postsWithComments","map","post","_objectSpread","user","find","id","userId","filter","comment","postId","payload","catch","initialState","originalPosts","isLoaded","isLoading","hasError","store","createStore","state","arguments","length","undefined","action","title","includes","body","applyMiddleware","thunk","User","PropTypes","bool","isRequired","func","arrayOf","object","shape","number","string","array","name","email","street","suite","city","zipcode","address","react_default","a","createElement","className","href","src","alt","Comment","deleteComment","components_User_User","onClick","CommentHandler","connect","ownProps","CommentList","key","Post","deletePost","components_CommentList_CommentList","PostHandler","PostList","PostListHandler","App","searchWord","handleSearchChange","value","target","_this","setState","searchPost","props","_this$props","this","Fragment","placeholder","onChange","disabled","React","Component","EnhancedApp","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.f07d13c1.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nconst ACTION_TYPES = {\n  START_LOADING: 'START_LOADING',\n  HANDLE_SUCCESS: 'HANDLE_SUCCESS',\n  HANDLE_ERROR: 'HANDLE_ERROR',\n  DELETE_POST: 'DELETE_POST',\n  DELETE_COMMENT: 'DELETE_COMMENT',\n  SEARCH_POST: 'SEARCH_POST',\n};\n\nexport const startLoading = () => ({\n  type: ACTION_TYPES.START_LOADING,\n});\n\nexport const addData = data => ({\n  type: ACTION_TYPES.HANDLE_SUCCESS,\n  payload: data,\n});\n\nexport const handleError = () => ({\n  type: ACTION_TYPES.HANDLE_ERROR,\n});\n\nexport const deletePost = id => ({\n  type: ACTION_TYPES.DELETE_POST,\n  payload: id,\n});\n\nexport const deleteComment = id => ({\n  type: ACTION_TYPES.DELETE_COMMENT,\n  payload: id,\n});\n\nexport const searchPost = value => ({\n  type: ACTION_TYPES.SEARCH_POST,\n  payload: value,\n});\n\nexport const loadPosts = () => (dispatch) => {\n  dispatch(startLoading());\n\n  Promise.all([\n    fetch(`${BASE_URL}/posts`),\n    fetch(`${BASE_URL}/users`),\n    fetch(`${BASE_URL}/comments`),\n  ])\n    .then(([posts, users, comments]) => Promise\n      .all([posts.json(), users.json(), comments.json()]))\n    .then(([posts, users, comments]) => {\n      const postsWithComments = posts.map(post => ({\n        ...post,\n        user: users.find(user => user.id === post.userId),\n        comments: comments.filter(comment => comment.postId === post.id),\n      }));\n\n      dispatch(addData(postsWithComments));\n    })\n    .catch(() => dispatch(handleError()));\n};\n\nconst initialState = {\n  posts: [],\n  originalPosts: [],\n  isLoaded: false,\n  isLoading: false,\n  hasError: false,\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.START_LOADING: {\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n    }\n\n    case ACTION_TYPES.HANDLE_SUCCESS: {\n      return {\n        ...state,\n        posts: action.payload,\n        originalPosts: action.payload,\n        isLoaded: true,\n        isLoading: false,\n      };\n    }\n\n    case ACTION_TYPES.HANDLE_ERROR: {\n      return {\n        ...state,\n        hasError: true,\n        isLoading: false,\n      };\n    }\n\n    case ACTION_TYPES.DELETE_POST: {\n      return {\n        ...state,\n        posts: state.posts.filter(post => post.id !== action.payload),\n        originalPosts: state.originalPosts\n          .filter(post => post.id !== action.payload),\n      };\n    }\n\n    case ACTION_TYPES.DELETE_COMMENT: {\n      return {\n        ...state,\n        posts: state.posts\n          .map(post => ({\n            ...post,\n            comments: post.comments\n              .filter(comment => comment.id !== action.payload),\n          })),\n        originalPosts: state.originalPosts\n          .map(post => ({\n            ...post,\n            comments: post.comments\n              .filter(comment => comment.id !== action.payload),\n          })),\n      };\n    }\n\n    case ACTION_TYPES.SEARCH_POST: {\n      return {\n        ...state,\n        posts: state.originalPosts.filter(post => (\n          (\n            post.title.includes(action.payload)\n          ) || (\n            post.body.includes(action.payload)\n          )\n        )),\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n);\n","import React from 'react';\nimport './User.css';\nimport { UserPropTypes } from '../../constants/prototypes';\n\nconst User = ({ name, email, address }) => (\n  <div className=\"user\">\n    <a className=\"user-name\" href=\"/ \">\n      <img className=\"user-icon\" src=\"./images/user-icon.png\" alt=\"user-ipon\" />\n      {name}\n    </a>\n    <p className=\"user-email\">\n      {email}\n    </p>\n    {address && (\n      <p className=\"user-address\">\n        {`${address.street}, ${address.suite},\n        ${address.city}, ${address.zipcode}`}\n      </p>\n    )}\n  </div>\n);\n\nUser.propTypes = UserPropTypes;\n\nexport default User;\n","import PropTypes from 'prop-types';\n\nexport const AppPropTypes = {\n  isLoaded: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  loadPosts: PropTypes.func.isRequired,\n  searchPost: PropTypes.func.isRequired,\n};\n\nexport const PostListPropTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport const PostPropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.object,\n    comments: PropTypes.array,\n  }).isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nexport const CommentListPropTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport const CommentPropTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nexport const UserPropTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  address: PropTypes.shape({\n    street: PropTypes.string,\n    suite: PropTypes.string,\n    city: PropTypes.string,\n    zipcode: PropTypes.string,\n  }),\n};\n","import React from 'react';\nimport './Comment.css';\nimport User from '../User/User';\nimport { CommentPropTypes } from '../../constants/prototypes';\n\nconst Comment = ({ comment, deleteComment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"comment\">\n      <User name={name} email={email} />\n      <p className=\"comment-text\">\n        {body}\n      </p>\n      <button\n        type=\"button\"\n        className=\"btn-delete-comment\"\n        onClick={deleteComment}\n      >\n        x\n      </button>\n    </div>\n  );\n};\n\nComment.propTypes = CommentPropTypes;\n\nexport default Comment;\n","import { connect } from 'react-redux';\nimport Comment from './Comment';\nimport { deleteComment } from '../../store';\n\nconst CommentHandler = connect(\n  null,\n  (dispatch, ownProps) => ({\n    deleteComment: () => dispatch(deleteComment(ownProps.comment.id)),\n  }),\n)(Comment);\n\nexport {\n  CommentHandler as Comment,\n};\n","import React from 'react';\nimport { Comment } from '../Comment';\nimport './CommentList.css';\nimport { CommentListPropTypes } from '../../constants/prototypes';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comments\">\n    <h3 className=\"comments-heading\">Comments:</h3>\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n\nCommentList.propTypes = CommentListPropTypes;\n\nexport default CommentList;\n","import React from 'react';\nimport './Post.css';\nimport User from '../User/User';\nimport CommentList from '../CommentList/CommentList';\nimport { PostPropTypes } from '../../constants/prototypes';\n\nconst Post = ({ post, deletePost }) => {\n  const { user, comments } = post;\n\n  return (\n    <div className=\"post\">\n      <h2 className=\"post-title\">{post.title}</h2>\n      <p className=\"post-text\">{post.body}</p>\n      <User name={user.name} email={user.email} address={user.address} />\n      <CommentList comments={comments} />\n      <button\n        type=\"button\"\n        className=\"btn-delete-post\"\n        onClick={deletePost}\n      >\n        x\n      </button>\n    </div>\n  );\n};\n\nPost.propTypes = PostPropTypes;\n\nexport default Post;\n","import { connect } from 'react-redux';\nimport Post from './Post';\nimport { deletePost } from '../../store';\n\nconst PostHandler = connect(\n  null,\n  (dispatch, ownProps) => ({\n    deletePost: () => dispatch(deletePost(ownProps.post.id)),\n  }),\n)(Post);\n\nexport {\n  PostHandler as Post,\n};\n","import React from 'react';\nimport './PostList.css';\nimport { Post } from '../Post';\nimport { PostListPropTypes } from '../../constants/prototypes';\n\nconst PostList = ({ posts }) => (\n  <div className=\"container\">\n    {posts.map(post => (\n      <Post post={post} key={post.id} />\n    ))}\n  </div>\n);\n\nPostList.propTypes = PostListPropTypes;\n\nexport default PostList;\n","import { connect } from 'react-redux';\nimport PostList from './PostList';\n\nconst PostListHandler = connect(\n  state => ({ posts: state.posts }),\n)(PostList);\n\nexport {\n  PostListHandler as PostList,\n};\n","import React from 'react';\nimport './App.css';\nimport { PostList } from '../components/PostList';\nimport { AppPropTypes } from '../constants/prototypes';\n\nclass App extends React.Component {\n  state = {\n    searchWord: '',\n  }\n\n  handleSearchChange = ({ target: { value } }) => {\n    this.setState({ searchWord: value });\n    const { searchPost } = this.props;\n    searchPost(value);\n  };\n\n  render() {\n    const {\n      isLoaded,\n      isLoading,\n      hasError,\n      loadPosts,\n    } = this.props;\n    const { searchWord } = this.state;\n\n    return (\n      <>\n        <h1 className=\"heading\">Dynamic list of todos</h1>\n        {isLoaded ? (\n          <>\n            <input\n              type=\"text\"\n              value={searchWord}\n              name=\"search-input\"\n              placeholder=\"Search...\"\n              className=\"search\"\n              onChange={this.handleSearchChange}\n            />\n            <PostList />\n          </>\n        ) : (\n          <>\n            {hasError && (\n              <h2 className=\"error-title\">\n                Oh, something went wrong! Please, try again\n              </h2>\n            )}\n            <button\n              type=\"button\"\n              className=\"load-button\"\n              onClick={loadPosts}\n              disabled={isLoading}\n            >\n              {isLoading ? 'Loading...' : 'Load posts'}\n            </button>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nApp.propTypes = AppPropTypes;\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { loadPosts, searchPost } from '../store';\n\nconst EnhancedApp = connect(\n  state => ({\n    isLoaded: state.isLoaded,\n    isLoading: state.isLoading,\n    hasError: state.hasError,\n  }),\n  dispatch => ({\n    loadPosts: () => dispatch(loadPosts()),\n    searchPost: value => dispatch(searchPost(value)),\n  }),\n)(App);\n\nexport {\n  EnhancedApp as App,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n"],"sourceRoot":""}