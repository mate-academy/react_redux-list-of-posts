{"version":3,"sources":["Get.js","User.js","store.js","Comment.js","CommentsList.js","Post.js","PostList.js","App.js","index.js"],"names":["API_URL","getPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","responsePosts","posts","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","apply","this","arguments","getComments","_ref2","_callee2","responseComments","comments","_context2","getUsers","_ref3","_callee3","responseUser","users","_context3","getData","_ref4","_callee4","postsWithUserAndComments","_context4","map","post","_objectSpread","userData","find","user","id","userId","userComments","filter","comment","postId","User","react_default","createElement","className","name","username","email","getLoadedPosts","state","loadedPosts","getPostTemplate","postTemplate","getIsLoaded","isLoaded","getIsLoading","isLoading","getCommentLists","commentListIsOpen","store","createStore","action","type","store_objectSpread","value","toConsumableArray","title","body","toLowerCase","includes","trim","commentId","composeWithDevTools","Comment","handleCommentDelete","_this","props","deleteComment","_this2","commentData","key","onClick","React","Component","connect","dispatch","CommentsList","handleClick","setCommentList","_this$props","src_Comment","Post","handlePostDelete","deletePost","postData","src_User_0","src_CommentsList","PostList","src_Post","App","handleLoad","setPosts","getLoading","filteringPosts","event","setFilteredPosts","target","_this$props2","placeholder","onChange","src_PostList","hidden","disabled","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a8b48552.chunk.js","sourcesContent":["const API_URL = ' https://jsonplaceholder.typicode.com';\n\nconst getPosts = async() => {\n  const responsePosts = await fetch(`${API_URL}/posts`);\n  const posts = await responsePosts.json();\nreturn posts;\n};\n\nconst getComments = async() => {\n  const responseComments = await fetch(`${API_URL}/comments`);\n  const comments = await responseComments.json();\nreturn comments;\n};\n\nconst getUsers = async() => {\n  const responseUser = await fetch(`${API_URL}/users`);\n  const users = await responseUser.json();\nreturn users;\n};\n\nexport const getData = async() => {\n  const posts = await getPosts();\n  const comments = await getComments();\n  const users = await getUsers();\n\n  const postsWithUserAndComments = posts.map((post) => ({\n    ...post,\n    userData: users.find(user => user.id === post.userId),\n    userComments: comments.filter(comment => post.id === comment.postId),\n\n  })\n  );\n  return postsWithUserAndComments;\n};\n\n","import React from 'react';\nimport './User.css';\n\nconst User = ({ userData }) => (\n  <div className=\"user\">\n    <span className=\"user_name\">\n      {userData.name}, the &nbsp;\n    </span>\n    <span className=\"user_nickname\">\n      ({userData.username})\n    </span>\n    <div className=\"user_email\">\n      {userData.email}\n    </div>\n  </div>\n);\n\nexport default User;\n","import {createStore} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n//constants\n\nconst GET_ISLOADING = 'GET_ISLOADING';\nconst SET_POSTS = 'SET_POSTS';\nconst SET_FILTERED_POSTS = 'SET_FILTERED_POSTS';\nconst SET_COMMENT_LIST = 'SET_COMMENT_LIST';\nconst DELETE_COMMENT = 'DELETE_COMMENT';\nconst DELETE_POST = 'DELETE_POST';\n\nconst initialState = {\n  loadedPosts: [],\n  postTemplate: [],\n  isLoaded: false,\n  isLoading: false,\n  commentListIsOpen: false,\n};\n\n// action creators\n\nexport const getLoading = () => ({ type: GET_ISLOADING });\nexport const setPosts = (value) => ({ type: SET_POSTS, value });\nexport const setFilteredPosts = (value) => ({ type: SET_FILTERED_POSTS, value })\nexport const setCommentList = () => ({ type: SET_COMMENT_LIST })\nexport const deleteComment = (postId, commentId) => ({ type: DELETE_COMMENT, postId, commentId })\nexport const deletePost = (value) => ({ type: DELETE_POST, value })\n\n\n// reducer\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case GET_ISLOADING:\n      return {\n         ...state,\n        isLoading: true,\n      };\n\n    case SET_POSTS:\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n        loadedPosts: action.value,\n        postTemplate: action.value,\n      };\n\n    case SET_FILTERED_POSTS:\n      return {\n        ...state,\n        loadedPosts: [...state.postTemplate].filter((post) => {\n          return (post.title && post.body).toLowerCase()\n            .includes(action.value\n              .toLowerCase()\n              .trim());\n            })\n      };\n\n    case SET_COMMENT_LIST:\n      return {\n        ...state,\n        commentListIsOpen: !state.commentListIsOpen,\n      };\n\n    case DELETE_COMMENT:\n\n       state.loadedPosts[action.postId-1].userComments = state.loadedPosts[action.postId-1].userComments.filter(\n       comment => comment.id !== action.commentId)\n\n      return  {\n        ...state,\n        loadedPosts: [...state.loadedPosts]\n      };\n\n    case DELETE_POST:\n      return {\n        ...state,\n        loadedPosts: [...state.loadedPosts].filter(post => post.id !== action.value)\n      }\n\n    default:\n      return state;\n  }\n};\n\n// selectors\n\nexport const getLoadedPosts = state => state.loadedPosts;\nexport const getPostTemplate = state => state.postTemplate;\nexport const getIsLoaded = state => state.isLoaded;\nexport const getIsLoading = state => state.isLoading;\nexport const getCommentLists = state => state.commentListIsOpen;\nexport const commentData = state => state.loadedPosts;\n\n// store\n\nconst store = createStore(reducer, initialState, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './comment.css';\nimport { deleteComment } from './store';\n\nclass Comment extends React.Component {\n\n  handleCommentDelete = (postId, commentId) => {\n    this.props.deleteComment(postId, commentId)\n  };\n  render() {\n    const { commentData } = this.props;\n    return(\n      <div>\n      <div className=\"comment\" key={commentData.id}>\n        <p className=\"comment_name\">{commentData.id}</p>\n        <p className=\"comment_name\">{commentData.name}</p>\n        <p className=\"comment_body\">{commentData.body}</p>\n        <p className=\"comment_email\">{commentData.email}</p>\n        <button  onClick={() =>  this.handleCommentDelete(commentData.postId, commentData.id)} >delete</button>\n      </div>\n  </div>\n    )\n  }\n};\n\nconst getData = (state) => ({ });\n\nconst getMethod = (dispatch) => ({\n  deleteComment: (postId, commentId) => dispatch(deleteComment(postId, commentId)),\n});\n\nexport default connect(getData, getMethod)(Comment);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Comment from './Comment';\nimport './commentlist.css';\n\nimport { getCommentLists, setCommentList } from './store';\n\nclass CommentsList extends React.Component {\n\n  handleClick = () => {\n   this.props.setCommentList()\n  };\n\n  render() {\n    const { commentData, commentListIsOpen } = this.props;\n    return (\n      <div>\n        <button\n          className=\"commentlist_load-buttom\"\n          type=\"button\"\n          onClick={this.handleClick}\n        >\n          {commentListIsOpen ? 'Hide comments' : 'Show comments'}\n        </button>\n        {commentListIsOpen\n        && commentData.map(comment =>\n        (\n          <Comment\n            commentData={comment}\n            key={comment.id}\n          />\n        ))}\n      </div>\n    );\n  };\n}\n\nconst getData = state => ({\n  commentListIsOpen: getCommentLists(state),\n\n});\n\nconst getMethod = dispatch => ({\n  setCommentList: () => dispatch(setCommentList()),\n});\n\nexport default connect(getData, getMethod)(CommentsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport User from './User';\nimport CommentsList from './CommentsList';\n\nimport { deletePost } from './store';\n\nclass Post extends React.Component {\n\n  handlePostDelete = (value) => {\n    this.props.deletePost(value)\n  };\n\n  render() {\n    const { postData } = this.props;\n    return(\n      <div>\n        <div className=\"postlist_title\">{postData.id} </div>\n        <div className=\"postlist_title\">{postData.title} </div>\n        <div className=\"postlist_body\">{postData.body} </div>\n        <div><User userData={postData.userData} /></div>\n        <div><CommentsList commentData={postData.userComments} /></div>\n        <button onClick={() =>  this.handlePostDelete(postData.id)}>delete</button>\n    </div>\n    )\n  }\n}\n\nconst getData = (state) => ({});\n\nconst getMethod = (dispatch) => ({\n  deletePost: (value) => dispatch(deletePost(value)),\n  });\n\nexport default connect(getData, getMethod)(Post);\n","import React from 'react';\nimport Post from './Post';\nimport './Postlist.css';\n\nconst PostList = ({ loadedPosts }) => (\n\n  <div>\n    {loadedPosts.map(post => (\n      <div className=\"postlist_item\" key={post.id}>\n        <div><Post postData={post} /></div>\n      </div>\n    ))}\n  </div>\n\n);\n\nexport default PostList;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './App.css';\nimport {getData} from './Get';\nimport PostList from './PostList';\n\nimport {\n  setPosts,\n  getLoading,\n  getIsLoading,\n  getIsLoaded,\n  getLoadedPosts,\n  getPostTemplate,\n  setFilteredPosts,\n        } from './store';\n\nclass App extends React.Component {\n\nhandleLoad = async() => {\n  const { setPosts, getLoading} = this.props;\n\n  getLoading();\n\n  const postsWithUserAndComments = await getData();\n\n  setPosts(postsWithUserAndComments);\n};\n\nfilteringPosts = (event) => {\n  const { setFilteredPosts } = this.props;\n  const { value } = event.target;\n  setFilteredPosts(value)\n};\n\nrender() {\n  const { isLoaded, isLoading } = this.props\n  if (!isLoaded) {\n    return (\n      <button\n        className=\"app_load-button\"\n        type=\"button\"\n        onClick={this.handleLoad}\n        hidden={isLoaded}\n        disabled={isLoading}\n      >\n        {isLoading ? 'Loading...' : 'Load'}\n      </button>\n    );\n  }\n  return (\n\n    <div className=\"app\">\n      <div>\n        <label>\n          <input\n            type=\"text\"\n            placeholder=\"Search post by body or title...\"\n            onChange={this.filteringPosts}\n            className=\"app_search-input\"\n          />\n        </label>\n      </div>\n      <PostList loadedPosts={this.props.loadedPosts} />\n    </div>\n  );\n}\n}\n\nconst getProps = state => ({\n  loadedPosts: getLoadedPosts(state),\n  postTemplate: getPostTemplate(state),\n  isLoaded: getIsLoaded(state),\n  isLoading: getIsLoading(state),\n});\n\nconst getMethods = dispatch => ({\n  getLoading: () => dispatch(getLoading()),\n  setPosts: (value) => dispatch(setPosts(value)),\n  setFilteredPosts: (value) => dispatch(setFilteredPosts(value)),\n});\n\nexport default connect(getProps, getMethods)(App);\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}